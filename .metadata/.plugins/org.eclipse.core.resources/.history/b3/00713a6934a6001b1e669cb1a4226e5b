package lesson01.exam01;

import java.awt.Container;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

// 윈도우 기능을 갖기 위해 JFrame을 상속 받음 
public class CalculatorFrame extends JFrame implements ActionListener {
	// '=' 버튼 과 'clear' 버튼의 클릭 이벤트를 처리하는 역할을 위해 ActionListner
	// 인터페이스 구현

	JTextField operand1 = new JTextField(4);
	JTextField operand2 = new JTextField(4);

	String[] opeartorData = { "+", "-", "*", "/" };
	JComboBox<String> operator = new JComboBox<>(opeartorData);
	JButton equal = new JButton("=");
	JTextField result = new JTextField(6);
	JButton clear = new JButton("Clear");

	public CalculatorFrame() {
		this.setTitle("Lesson01 - Exam01");

		Container contentPane = this.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane, BoxLayout.Y_AXIS));

		contentPane.add(Box.createVerticalGlue());
		contentPane.add(this.createInputForm());
		contentPane.add(this.createToolBar());
		contentPane.add(Box.createVerticalGlue());

		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.pack();
		this.setLocationRelativeTo(null);

	}

	public static void main(String[] args) {

	}

	@Override // 버튼을 클릭 했을 때 호출 된다.
	public void actionPerformed(ActionEvent event) {
		// 제일 먼저 어떤 버튼이 클릭 됐는지 구분하기 위해 evnet 객페의 getSourece 반환값을 검사한다.
		if (event.getSource() == equal) {
			compute(); // '=' 버튼 클릭 시 호출 되는 메서드
		} else {
			clearForm(); // 그 밖에는 clear 버튼 시 호출되는 메서드
		}

	}

	private void compute() {
		double a = Double.parseDouble(operand1.getText());
		double b = Double.parseDouble(operand2.getText());
		double r = 0;

		try {
			switch (operator.getSelectedItem().toString()) {
			case "+":
				r = a + b;
				break;
			case "-":
				r = a - b;
				break;
			case "*":
				r = a * b;
				break;
			case "/":
				if (b == 0)
					throw new Exception("0으로 나눌 수 없습니다.");
				r = a / b;
				break;
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
		}

	}

	private void clearForm() {
		this.operand1.setText("");
		this.operand2.setText("");
		this.result.setText("");
	}

	private Box createInputForm() {
		Box box = Box.createHorizontalBox();
		box.setMaximumSize(new Dimension(300, 30));
		box.setAlignmentY(Box.CENTER_ALIGNMENT);
		box.add(operand1);
		box.add(operator);
		box.add(operand2);
		box.add(equal);
		box.add(result);
		equal.addActionListener(this);
		return box;
	}

	private Box createToolBar() {
		Box box = Box.createHorizontalBox();
		box.add(clear);
		clear.addActionListener(this);
		return box;
	}

}
